class Item:
    def __init__(self,val,w):
        self.value = val
        self.weight = w
        
class Solution:    
    #Function to get the maximum total value in the knapsack.
    def fractionalknapsack(self, W,arr,n):
        
        # code here
        a = []
        ans = []
        
        for i in range(n):
            a.append(arr[i].value/arr[i].weight)
            ans.append([a[i],i])
        ans.sort(key = lambda x:x[0],reverse = True)
        profit = 0.0
        curr = 0
        for i in range(n):
            if curr+arr[ans[i][1]].weight <= W:
                profit += arr[ans[i][1]].value
                W -= arr[ans[i][1]].weight
            else:
                rem = W-curr
                profit += ans[i][0]*rem
                break
        return profit
